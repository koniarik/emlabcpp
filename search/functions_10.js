var searchData=
[
  ['range_1208',['range',['../namespaceemlabcpp.html#ac4b40baac2662db6424a475292ef03b3',1,'emlabcpp::range(Numeric from, Numeric to)'],['../namespaceemlabcpp.html#a2d76a81f2d964ef275dd31aab2737973',1,'emlabcpp::range(Numeric to)']]],
  ['rbegin_1209',['rbegin',['../classemlabcpp_1_1static__circular__buffer.html#a82621c5507fded59f3f57d1998fc2caa',1,'emlabcpp::static_circular_buffer::rbegin() const'],['../classemlabcpp_1_1static__circular__buffer.html#a1a3182539f45d95b3a81fc9fcae83114',1,'emlabcpp::static_circular_buffer::rbegin()'],['../classemlabcpp_1_1view.html#a8fdd836a77a7b1218f8785739715eaef',1,'emlabcpp::view::rbegin()']]],
  ['receive_1210',['receive',['../classemlabcpp_1_1testing__controller__interface.html#ad6dd808c99e3a412eda3f61b2285f506',1,'emlabcpp::testing_controller_interface::receive()'],['../classemlabcpp_1_1testing__reactor__interface.html#a9f912009ff9a916d81c16a643791713e',1,'emlabcpp::testing_reactor_interface::receive()']]],
  ['register_5fcallable_1211',['register_callable',['../classemlabcpp_1_1testing__reactor.html#ab42c6fd8783bf7fd72b9e85d8f94dfff',1,'emlabcpp::testing_reactor']]],
  ['register_5fkey_1212',['register_key',['../classemlabcpp_1_1protocol_1_1register__map.html#a8fb00aa95c1e87be15a902fc6e229e0b',1,'emlabcpp::protocol::register_map']]],
  ['register_5fmap_1213',['register_map',['../classemlabcpp_1_1protocol_1_1register__map.html#ac1b8637639e83482561ed560b66dd395',1,'emlabcpp::protocol::register_map::register_map()=default'],['../classemlabcpp_1_1protocol_1_1register__map.html#ab9938c4712ea420c4a115cb762ce2452',1,'emlabcpp::protocol::register_map::register_map(typename Regs::value_type... args)']]],
  ['register_5fsize_1214',['register_size',['../classemlabcpp_1_1protocol_1_1register__map.html#a5ca8ba945e7b47eadb74117dc008e50a',1,'emlabcpp::protocol::register_map']]],
  ['register_5ftest_1215',['register_test',['../classemlabcpp_1_1testing__reactor.html#a51c971a216107a4ca97b3c24c553347a',1,'emlabcpp::testing_reactor']]],
  ['rend_1216',['rend',['../classemlabcpp_1_1view.html#a0a549012c992a9582b6998578a69a042',1,'emlabcpp::view::rend()'],['../classemlabcpp_1_1static__circular__buffer.html#aed2d8dce3af78778c37e0605b35d4f13',1,'emlabcpp::static_circular_buffer::rend() const'],['../classemlabcpp_1_1static__circular__buffer.html#a650db0dae783438bb1163aa202429ac6',1,'emlabcpp::static_circular_buffer::rend()']]],
  ['requires_1217',['requires',['../classemlabcpp_1_1static__vector.html#a341fb370710104c6c45ffeb3ce9895cd',1,'emlabcpp::static_vector::requires()'],['../namespaceemlabcpp_1_1impl.html#aa391ac6fa79be363f91ee9cbe2e4c578',1,'emlabcpp::impl::requires(!range_container&lt; Container &gt;) std'],['../namespaceemlabcpp_1_1impl.html#a6bbd605bf9a833a4c88a3862dbf50d5f',1,'emlabcpp::impl::requires(T a, typename T::value_type b)'],['../namespaceemlabcpp.html#aab6fd32a8b3335eec93b94331d4293b0',1,'emlabcpp::requires(!range_container&lt; Container &gt;) const expr std'],['../namespaceemlabcpp.html#a670099942b8cdd3d2cc28760b1717d7c',1,'emlabcpp::requires(!range_container&lt; Container &gt;) const expr void for_each(Container &amp;&amp;cont'],['../namespaceemlabcpp.html#a35de9105fe961a808d8e0f3a2cb58bf2',1,'emlabcpp::requires(!requires(Callable f) { { f.template operator()&lt; 0 &gt;() } -&gt; std::same_as&lt; void &gt;;}) const expr auto select_index(IndexType i'],['../namespaceemlabcpp.html#a8d77f50ca9dd31e43365e38debbd42fa',1,'emlabcpp::requires(Callable f)'],['../namespaceemlabcpp.html#a39bdb9e4992c495c755d900b23435840',1,'emlabcpp::requires(std::is_enum_v&lt; Enum &gt;) auto convert_enum(Enum val)'],['../namespaceemlabcpp.html#a47678934b72ad7819a97dc51b9ef2687',1,'emlabcpp::requires(alternative_of&lt; T, testing_value &gt;) struct testing_value_converter&lt; T &gt;'],['../namespaceemlabcpp.html#aa77608436688fc7a6314e4d06f8e5ca7',1,'emlabcpp::requires(!std::same_as&lt; T, int64_t &gt; &amp;&amp;std::is_integral_v&lt; T &gt;) struct testing_value_converter&lt; T &gt;'],['../namespaceemlabcpp_1_1protocol.html#a919b5b19b105271c651067cd4c116b44',1,'emlabcpp::protocol::requires(!std::derived_from&lt; T, converter_def_type_base &gt; &amp;&amp;!quantity_derived&lt; T &gt;) struct converter&lt; T'],['../namespaceemlabcpp_1_1protocol.html#a6a87c037501b441e22c490164b25493b',1,'emlabcpp::protocol::requires(!std::derived_from&lt; T, converter_def_type_base &gt; &amp;&amp;!quantity_derived&lt; T &gt;) struct proto_traits&lt; T &gt;'],['../namespaceemlabcpp.html#acd74c7df9ccef5ce376d2c3fe2ef8908',1,'emlabcpp::requires(sizeof(uint8_t)==N) struct select_utype&lt; N &gt;'],['../namespaceemlabcpp.html#a3dcd56ce6fdffb4ebcf8a4c079335d8e',1,'emlabcpp::requires(sizeof(uint16_t)==N) struct select_utype&lt; N &gt;'],['../namespaceemlabcpp.html#ac39ed97224e397106e08c6e04012e62a',1,'emlabcpp::requires(sizeof(uint32_t)==N) struct select_utype&lt; N &gt;'],['../namespaceemlabcpp.html#a2acb59e904f4530e0e8d42e98f67bcaa',1,'emlabcpp::requires(sizeof(uint64_t)==N) struct select_utype&lt; N &gt;'],['../classemlabcpp_1_1bounded.html#a53a7e456f96a1af5abfd27f48b206924',1,'emlabcpp::bounded::requires()'],['../classemlabcpp_1_1bounded__view.html#adc401f011b02ae22f33db8fc9005116c',1,'emlabcpp::bounded_view::requires(OtherSize::min_val &gt;=min &amp;&amp;OtherSize::max_val&lt;=max) bounded_view(const bounded_view&lt; Iterator'],['../classemlabcpp_1_1bounded__view.html#acb8e32e74f5b6f68b6603b530f2edf58',1,'emlabcpp::bounded_view::requires(range_container&lt; Container &gt; &amp;&amp;static_sized&lt; Container &gt; &amp;&amp;std::tuple_size_v&lt; Container &gt;&lt;=max &amp;&amp;std::tuple_size_v&lt; Container &gt; &gt;=min) bounded_view(Container &amp;cont)'],['../classemlabcpp_1_1bounded__view.html#aa74d67e6fcf863e95a1e537fc695bce9',1,'emlabcpp::bounded_view::requires(n&lt;=min) bounded_view&lt; iterator'],['../classemlabcpp_1_1protocol_1_1register__map.html#a35826b2fe1c15b27563a805397fdd49f',1,'emlabcpp::protocol::register_map::requires(register_map_void_returning&lt; UnaryCallable, registers_tuple &gt;) const expr void with_register(key_type key'],['../classemlabcpp_1_1protocol_1_1register__map.html#aa3b962aa6680ba29d114d86323e7ff5a',1,'emlabcpp::protocol::register_map::requires(!register_map_void_returning&lt; UnaryCallable, registers_tuple &gt;) const expr auto with_register(key_type key'],['../structemlabcpp_1_1protocol_1_1command__group.html#adcdf4b785d8a11621a08053b2aa31d12',1,'emlabcpp::protocol::command_group::requires()'],['../classemlabcpp_1_1pretty__printer.html#a301a1966555e122daf8714e6926f4626',1,'emlabcpp::pretty_printer::requires(std::is_enum_v&lt; T &gt;) void main_print(const T &amp;val)'],['../classemlabcpp_1_1pretty__printer.html#aeab65e772397f0bfd61780e1f4bc18cc',1,'emlabcpp::pretty_printer::requires(detail::directly_streamable_for&lt; std::ostream, T &gt; &amp;&amp;!std::same_as&lt; T, uint8_t &gt; &amp;&amp;!std::is_enum_v&lt; T &gt;) void main_print(const T &amp;val)'],['../classemlabcpp_1_1bounded__view.html#aa74d67e6fcf863e95a1e537fc695bce9',1,'emlabcpp::bounded_view::requires()']]],
  ['reset_1218',['reset',['../classemlabcpp_1_1pid.html#aeb89b4775102d8952f25e02b4bacc4a8',1,'emlabcpp::pid']]],
  ['reversed_1219',['reversed',['../namespaceemlabcpp.html#a3921b804e7ed8b1041ec50f786404c28',1,'emlabcpp']]],
  ['rotate_5fleft_1220',['rotate_left',['../classemlabcpp_1_1bounded.html#a86cec16fb9f8c2f55246576af3852c1d',1,'emlabcpp::bounded']]],
  ['rotate_5fright_1221',['rotate_right',['../classemlabcpp_1_1bounded.html#a12d2c56dbd65a3e1a62f3810524e197b',1,'emlabcpp::bounded']]],
  ['run_1222',['run',['../classemlabcpp_1_1testing__interface.html#a0fb260d41d29b551bbc4d761b24c5904',1,'emlabcpp::testing_interface::run()'],['../classemlabcpp_1_1testing__callable__overlay.html#aa177c82e861698f39785239e626bd5d5',1,'emlabcpp::testing_callable_overlay::run()'],['../classemlabcpp_1_1testing__composer.html#ab4c2576a09e2d27e94e7469723029816',1,'emlabcpp::testing_composer::run()']]]
];
