var annotated_dup =
[
    [ "emlabcpp", "namespaceemlabcpp.html", [
      [ "coro", "namespaceemlabcpp_1_1coro.html", [
        [ "memory_promise", "structemlabcpp_1_1coro_1_1memory__promise.html", "structemlabcpp_1_1coro_1_1memory__promise" ],
        [ "owning_coroutine_handle", "classemlabcpp_1_1coro_1_1owning__coroutine__handle.html", "classemlabcpp_1_1coro_1_1owning__coroutine__handle" ],
        [ "wait_interface", "classemlabcpp_1_1coro_1_1wait__interface.html", "classemlabcpp_1_1coro_1_1wait__interface" ],
        [ "data_promise", "structemlabcpp_1_1coro_1_1data__promise.html", "structemlabcpp_1_1coro_1_1data__promise" ],
        [ "data_promise< void >", "structemlabcpp_1_1coro_1_1data__promise_3_01void_01_4.html", "structemlabcpp_1_1coro_1_1data__promise_3_01void_01_4" ],
        [ "recursive_coroutine", "classemlabcpp_1_1coro_1_1recursive__coroutine.html", "classemlabcpp_1_1coro_1_1recursive__coroutine" ],
        [ "request_reply", "classemlabcpp_1_1coro_1_1request__reply.html", "classemlabcpp_1_1coro_1_1request__reply" ]
      ] ],
      [ "detail", "namespaceemlabcpp_1_1detail.html", [
        [ "decompose_anything", "structemlabcpp_1_1detail_1_1decompose__anything.html", "structemlabcpp_1_1detail_1_1decompose__anything" ],
        [ "static_function_vtable", "structemlabcpp_1_1detail_1_1static__function__vtable.html", "structemlabcpp_1_1detail_1_1static__function__vtable" ],
        [ "static_function_storage", "classemlabcpp_1_1detail_1_1static__function__storage.html", "classemlabcpp_1_1detail_1_1static__function__storage" ]
      ] ],
      [ "impl", "namespaceemlabcpp_1_1impl.html", [
        [ "map_f_collector", "namespaceemlabcpp_1_1impl.html#structemlabcpp_1_1impl_1_1map__f__collector", null ],
        [ "map_f_collector< T >", "structemlabcpp_1_1impl_1_1map__f__collector_3_01T_01_4.html", "structemlabcpp_1_1impl_1_1map__f__collector_3_01T_01_4" ],
        [ "map_f_collector< std::array< T, N > >", "structemlabcpp_1_1impl_1_1map__f__collector_3_01std_1_1array_3_01T_00_01N_01_4_01_4.html", "structemlabcpp_1_1impl_1_1map__f__collector_3_01std_1_1array_3_01T_00_01N_01_4_01_4" ],
        [ "is_view", "structemlabcpp_1_1impl_1_1is__view.html", null ],
        [ "is_view< T >", "structemlabcpp_1_1impl_1_1is__view_3_01T_01_4.html", null ],
        [ "is_std_tuple", "structemlabcpp_1_1impl_1_1is__std__tuple.html", null ],
        [ "is_std_tuple< std::tuple< T... > >", "structemlabcpp_1_1impl_1_1is__std__tuple_3_01std_1_1tuple_3_01T_8_8_8_01_4_01_4.html", null ],
        [ "is_std_array", "structemlabcpp_1_1impl_1_1is__std__array.html", null ],
        [ "is_std_array< std::array< T, N > >", "structemlabcpp_1_1impl_1_1is__std__array_3_01std_1_1array_3_01T_00_01N_01_4_01_4.html", null ],
        [ "is_std_vector", "structemlabcpp_1_1impl_1_1is__std__vector.html", null ],
        [ "is_std_vector< std::vector< T > >", "structemlabcpp_1_1impl_1_1is__std__vector_3_01std_1_1vector_3_01T_01_4_01_4.html", null ],
        [ "static_size", "namespaceemlabcpp_1_1impl.html#structemlabcpp_1_1impl_1_1static__size", null ],
        [ "static_size< std::array< T, N > >", "structemlabcpp_1_1impl_1_1static__size_3_01std_1_1array_3_01T_00_01N_01_4_01_4.html", "structemlabcpp_1_1impl_1_1static__size_3_01std_1_1array_3_01T_00_01N_01_4_01_4" ],
        [ "static_size< std::tuple< Ts... > >", "structemlabcpp_1_1impl_1_1static__size_3_01std_1_1tuple_3_01Ts_8_8_8_01_4_01_4.html", "structemlabcpp_1_1impl_1_1static__size_3_01std_1_1tuple_3_01Ts_8_8_8_01_4_01_4" ],
        [ "is_view< view< Iter > >", "structemlabcpp_1_1impl_1_1is__view_3_01view_3_01Iter_01_4_01_4.html", null ]
      ] ],
      [ "iterators", "namespaceemlabcpp_1_1iterators.html", [
        [ "access_iterator", "classemlabcpp_1_1iterators_1_1access__iterator.html", "classemlabcpp_1_1iterators_1_1access__iterator" ],
        [ "convert_iterator", "classemlabcpp_1_1iterators_1_1convert__iterator.html", "classemlabcpp_1_1iterators_1_1convert__iterator" ],
        [ "numeric_iterator", "classemlabcpp_1_1iterators_1_1numeric__iterator.html", "classemlabcpp_1_1iterators_1_1numeric__iterator" ],
        [ "subscript_iterator", "classemlabcpp_1_1iterators_1_1subscript__iterator.html", "classemlabcpp_1_1iterators_1_1subscript__iterator" ]
      ] ],
      [ "pmr", "namespaceemlabcpp_1_1pmr.html", [
        [ "deleter", "structemlabcpp_1_1pmr_1_1deleter.html", "structemlabcpp_1_1pmr_1_1deleter" ],
        [ "allocator", "classemlabcpp_1_1pmr_1_1allocator.html", "classemlabcpp_1_1pmr_1_1allocator" ],
        [ "memory_resource", "classemlabcpp_1_1pmr_1_1memory__resource.html", "classemlabcpp_1_1pmr_1_1memory__resource" ],
        [ "new_delete_resource_impl", "structemlabcpp_1_1pmr_1_1new__delete__resource__impl.html", "structemlabcpp_1_1pmr_1_1new__delete__resource__impl" ],
        [ "pool_resource", "classemlabcpp_1_1pmr_1_1pool__resource.html", "classemlabcpp_1_1pmr_1_1pool__resource" ],
        [ "stack_resource", "classemlabcpp_1_1pmr_1_1stack__resource.html", "classemlabcpp_1_1pmr_1_1stack__resource" ]
      ] ],
      [ "protocol", "namespaceemlabcpp_1_1protocol.html", [
        [ "multiplexed_endpoint", "classemlabcpp_1_1protocol_1_1multiplexed__endpoint.html", "classemlabcpp_1_1protocol_1_1multiplexed__endpoint" ],
        [ "conversion_result", "structemlabcpp_1_1protocol_1_1conversion__result.html", "structemlabcpp_1_1protocol_1_1conversion__result" ],
        [ "endianess_wrapper", "structemlabcpp_1_1protocol_1_1endianess__wrapper.html", "structemlabcpp_1_1protocol_1_1endianess__wrapper" ],
        [ "group", "namespaceemlabcpp_1_1protocol.html#structemlabcpp_1_1protocol_1_1group", "namespaceemlabcpp_1_1protocol_structemlabcpp_1_1protocol_1_1group_dup" ],
        [ "tag_group", "namespaceemlabcpp_1_1protocol.html#structemlabcpp_1_1protocol_1_1tag__group", "namespaceemlabcpp_1_1protocol_structemlabcpp_1_1protocol_1_1tag__group_dup" ],
        [ "sized_buffer", "namespaceemlabcpp_1_1protocol.html#structemlabcpp_1_1protocol_1_1sized__buffer", "namespaceemlabcpp_1_1protocol_structemlabcpp_1_1protocol_1_1sized__buffer_dup" ],
        [ "value_offset", "structemlabcpp_1_1protocol_1_1value__offset.html", "structemlabcpp_1_1protocol_1_1value__offset" ],
        [ "converter_def_type_base", "structemlabcpp_1_1protocol_1_1converter__def__type__base.html", null ],
        [ "command", "structemlabcpp_1_1protocol_1_1command.html", "structemlabcpp_1_1protocol_1_1command" ],
        [ "command_group", "structemlabcpp_1_1protocol_1_1command__group.html", "structemlabcpp_1_1protocol_1_1command__group" ],
        [ "command_group< Endianess >", "namespaceemlabcpp_1_1protocol.html#structemlabcpp_1_1protocol_1_1command__group_3_01Endianess_01_4", "namespaceemlabcpp_1_1protocol_structemlabcpp_1_1protocol_1_1command__group_3_01Endianess_01_4_dup" ],
        [ "converter", "namespaceemlabcpp_1_1protocol.html#structemlabcpp_1_1protocol_1_1converter", null ],
        [ "backup_converter", "namespaceemlabcpp_1_1protocol.html#structemlabcpp_1_1protocol_1_1backup__converter", null ],
        [ "converter< D, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01D_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01D_00_01Endianess_01_4" ],
        [ "converter< std::array< D, N >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1array_3_01D_00_01N_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1array_3_01D_00_01N_01_4_00_01Endianess_01_4" ],
        [ "converter< std::tuple< Ds... >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1tuple_3_01Ds_8_8_8_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1tuple_3_01Ds_8_8_8_01_4_00_01Endianess_01_4" ],
        [ "converter< std::variant< Ds... >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1variant_3_01Ds_8_8_8_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1variant_3_01Ds_8_8_8_01_4_00_01Endianess_01_4" ],
        [ "converter< std::monostate, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1monostate_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1monostate_00_01Endianess_01_4" ],
        [ "converter< std::optional< T >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1optional_3_01T_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1optional_3_01T_01_4_00_01Endianess_01_4" ],
        [ "converter< std::bitset< N >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1bitset_3_01N_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1bitset_3_01N_01_4_00_01Endianess_01_4" ],
        [ "converter< message< N >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01message_3_01N_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01message_3_01N_01_4_00_01Endianess_01_4" ],
        [ "converter< sizeless_message< N >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01sizeless__message_3_01N_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01sizeless__message_3_01N_01_4_00_01Endianess_01_4" ],
        [ "converter< value_offset< D, Offset >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01value__offset_3_01D_00_01Offset_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01value__offset_3_01D_00_01Offset_01_4_00_01Endianess_01_4" ],
        [ "converter< bounded< D, Min, Max >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01bounded_3_01D_00_01Min_00_01Max_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01bounded_3_01D_00_01Min_00_01Max_01_4_00_01Endianess_01_4" ],
        [ "converter< sized_buffer< CounterDef, D >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01sized__buffer_3_01CounterDef_00_01D_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01sized__buffer_3_01CounterDef_00_01D_01_4_00_01Endianess_01_4" ],
        [ "converter< tag< V >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01tag_3_01V_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01tag_3_01V_01_4_00_01Endianess_01_4" ],
        [ "converter< tag_group< Ds... >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01tag__group_3_01Ds_8_8_8_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01tag__group_3_01Ds_8_8_8_01_4_00_01Endianess_01_4" ],
        [ "converter< group< Ds... >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01group_3_01Ds_8_8_8_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01group_3_01Ds_8_8_8_01_4_00_01Endianess_01_4" ],
        [ "converter< endianess_wrapper< Endianess, D >, ParentEndianess >", "structemlabcpp_1_1protocol_1_1converter_3_01endianess__wrapper_3_01Endianess_00_01D_01_4_00_01ParentEndianess_01_4.html", null ],
        [ "converter< mark, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01mark_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01mark_00_01Endianess_01_4" ],
        [ "converter< error_record, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01error__record_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01error__record_00_01Endianess_01_4" ],
        [ "converter< static_vector< T, N >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01static__vector_3_01T_00_01N_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01static__vector_3_01T_00_01N_01_4_00_01Endianess_01_4" ],
        [ "backup_converter< T, Endianess >", "structemlabcpp_1_1protocol_1_1backup__converter_3_01T_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1backup__converter_3_01T_00_01Endianess_01_4" ],
        [ "memcpy_converter", "structemlabcpp_1_1protocol_1_1memcpy__converter.html", "structemlabcpp_1_1protocol_1_1memcpy__converter" ],
        [ "endpoint_load_error", "namespaceemlabcpp_1_1protocol.html#structemlabcpp_1_1protocol_1_1endpoint__load__error", null ],
        [ "endpoint", "classemlabcpp_1_1protocol_1_1endpoint.html", "classemlabcpp_1_1protocol_1_1endpoint" ],
        [ "mark", "structemlabcpp_1_1protocol_1_1mark.html", "structemlabcpp_1_1protocol_1_1mark" ],
        [ "error_record", "namespaceemlabcpp_1_1protocol.html#structemlabcpp_1_1protocol_1_1error__record", "namespaceemlabcpp_1_1protocol_structemlabcpp_1_1protocol_1_1error__record_dup" ],
        [ "handler", "structemlabcpp_1_1protocol_1_1handler.html", "structemlabcpp_1_1protocol_1_1handler" ],
        [ "message", "classemlabcpp_1_1protocol_1_1message.html", "classemlabcpp_1_1protocol_1_1message" ],
        [ "sizeless_message", "classemlabcpp_1_1protocol_1_1sizeless__message.html", "classemlabcpp_1_1protocol_1_1sizeless__message" ],
        [ "packet", "structemlabcpp_1_1protocol_1_1packet.html", "structemlabcpp_1_1protocol_1_1packet" ],
        [ "packet_handler", "structemlabcpp_1_1protocol_1_1packet__handler.html", "structemlabcpp_1_1protocol_1_1packet__handler" ],
        [ "register_handler", "structemlabcpp_1_1protocol_1_1register__handler.html", "structemlabcpp_1_1protocol_1_1register__handler" ],
        [ "register_pair", "structemlabcpp_1_1protocol_1_1register__pair.html", "structemlabcpp_1_1protocol_1_1register__pair" ],
        [ "register_map", "classemlabcpp_1_1protocol_1_1register__map.html", "classemlabcpp_1_1protocol_1_1register__map" ],
        [ "sequencer_read_request", "structemlabcpp_1_1protocol_1_1sequencer__read__request.html", "structemlabcpp_1_1protocol_1_1sequencer__read__request" ],
        [ "sequencer", "classemlabcpp_1_1protocol_1_1sequencer.html", "classemlabcpp_1_1protocol_1_1sequencer" ],
        [ "serializer", "structemlabcpp_1_1protocol_1_1serializer.html", "structemlabcpp_1_1protocol_1_1serializer" ],
        [ "serializer< float, Endianess >", "structemlabcpp_1_1protocol_1_1serializer_3_01float_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1serializer_3_01float_00_01Endianess_01_4" ],
        [ "serializer< bool, Endianess >", "structemlabcpp_1_1protocol_1_1serializer_3_01bool_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1serializer_3_01bool_00_01Endianess_01_4" ],
        [ "proto_traits", "namespaceemlabcpp_1_1protocol.html#structemlabcpp_1_1protocol_1_1proto__traits", null ],
        [ "backup_proto_traits", "namespaceemlabcpp_1_1protocol.html#structemlabcpp_1_1protocol_1_1backup__proto__traits", null ],
        [ "proto_traits< D >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01D_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01D_01_4" ],
        [ "proto_traits< std::array< D, N > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1array_3_01D_00_01N_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1array_3_01D_00_01N_01_4_01_4" ],
        [ "proto_traits< std::tuple< Ds... > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1tuple_3_01Ds_8_8_8_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1tuple_3_01Ds_8_8_8_01_4_01_4" ],
        [ "proto_traits< std::variant< Ds... > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1variant_3_01Ds_8_8_8_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1variant_3_01Ds_8_8_8_01_4_01_4" ],
        [ "proto_traits< std::monostate >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1monostate_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1monostate_01_4" ],
        [ "proto_traits< std::bitset< N > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1bitset_3_01N_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1bitset_3_01N_01_4_01_4" ],
        [ "proto_traits< sizeless_message< N > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01sizeless__message_3_01N_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01sizeless__message_3_01N_01_4_01_4" ],
        [ "proto_traits< message< N > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01message_3_01N_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01message_3_01N_01_4_01_4" ],
        [ "proto_traits< value_offset< D, Offset > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01value__offset_3_01D_00_01Offset_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01value__offset_3_01D_00_01Offset_01_4_01_4" ],
        [ "proto_traits< bounded< D, Min, Max > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01bounded_3_01D_00_01Min_00_01Max_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01bounded_3_01D_00_01Min_00_01Max_01_4_01_4" ],
        [ "proto_traits< sized_buffer< CounterType, D > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01sized__buffer_3_01CounterType_00_01D_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01sized__buffer_3_01CounterType_00_01D_01_4_01_4" ],
        [ "proto_traits< tag< V > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01tag_3_01V_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01tag_3_01V_01_4_01_4" ],
        [ "proto_traits< group< Ds... > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01group_3_01Ds_8_8_8_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01group_3_01Ds_8_8_8_01_4_01_4" ],
        [ "proto_traits< tag_group< Ds... > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01tag__group_3_01Ds_8_8_8_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01tag__group_3_01Ds_8_8_8_01_4_01_4" ],
        [ "proto_traits< endianess_wrapper< Endianess, D > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01endianess__wrapper_3_01Endianess_00_01D_01_4_01_4.html", null ],
        [ "proto_traits< mark >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01mark_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01mark_01_4" ],
        [ "proto_traits< error_record >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01error__record_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01error__record_01_4" ],
        [ "proto_traits< static_vector< T, N > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01static__vector_3_01T_00_01N_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01static__vector_3_01T_00_01N_01_4_01_4" ],
        [ "proto_traits< std::optional< T > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1optional_3_01T_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1optional_3_01T_01_4_01_4" ],
        [ "backup_proto_traits< T >", "structemlabcpp_1_1protocol_1_1backup__proto__traits_3_01T_01_4.html", "structemlabcpp_1_1protocol_1_1backup__proto__traits_3_01T_01_4" ],
        [ "tuple", "structemlabcpp_1_1protocol_1_1tuple.html", "structemlabcpp_1_1protocol_1_1tuple" ]
      ] ],
      [ "rpc", "namespaceemlabcpp_1_1rpc.html", [
        [ "void_return_type", "namespaceemlabcpp_1_1rpc.html#structemlabcpp_1_1rpc_1_1void__return__type", null ],
        [ "reactor_error", "namespaceemlabcpp_1_1rpc.html#structemlabcpp_1_1rpc_1_1reactor__error", "namespaceemlabcpp_1_1rpc_structemlabcpp_1_1rpc_1_1reactor__error_dup" ],
        [ "reply_error", "namespaceemlabcpp_1_1rpc.html#structemlabcpp_1_1rpc_1_1reply__error", "namespaceemlabcpp_1_1rpc_structemlabcpp_1_1rpc_1_1reply__error_dup" ],
        [ "error", "namespaceemlabcpp_1_1rpc.html#structemlabcpp_1_1rpc_1_1error", "namespaceemlabcpp_1_1rpc_structemlabcpp_1_1rpc_1_1error_dup" ],
        [ "traits", "namespaceemlabcpp_1_1rpc.html#structemlabcpp_1_1rpc_1_1traits", null ],
        [ "traits< std::tuple< Calls... > >", "namespaceemlabcpp_1_1rpc.html#structemlabcpp_1_1rpc_1_1traits_3_01std_1_1tuple_3_01Calls_8_8_8_01_4_01_4", "namespaceemlabcpp_1_1rpc_structemlabcpp_1_1rpc_1_1traits_3_01std_1_1tuple_3_01Calls_8_8_8_01_4_01_4_dup" ],
        [ "reactor", "classemlabcpp_1_1rpc_1_1reactor.html", "classemlabcpp_1_1rpc_1_1reactor" ],
        [ "controller", "classemlabcpp_1_1rpc_1_1controller.html", "classemlabcpp_1_1rpc_1_1controller" ],
        [ "derive", "structemlabcpp_1_1rpc_1_1derive.html", "structemlabcpp_1_1rpc_1_1derive" ],
        [ "class_wrapper", "classemlabcpp_1_1rpc_1_1class__wrapper.html", "classemlabcpp_1_1rpc_1_1class__wrapper" ],
        [ "bind", "structemlabcpp_1_1rpc_1_1bind.html", "structemlabcpp_1_1rpc_1_1bind" ],
        [ "bind_wrapper", "classemlabcpp_1_1rpc_1_1bind__wrapper.html", "classemlabcpp_1_1rpc_1_1bind__wrapper" ]
      ] ],
      [ "testing", "namespaceemlabcpp_1_1testing.html", [
        [ "test_info", "namespaceemlabcpp_1_1testing.html#structemlabcpp_1_1testing_1_1test__info", "namespaceemlabcpp_1_1testing_structemlabcpp_1_1testing_1_1test__info_dup" ],
        [ "test_result", "structemlabcpp_1_1testing_1_1test__result.html", "structemlabcpp_1_1testing_1_1test__result" ],
        [ "collect_request", "namespaceemlabcpp_1_1testing.html#structemlabcpp_1_1testing_1_1collect__request", "namespaceemlabcpp_1_1testing_structemlabcpp_1_1testing_1_1collect__request_dup" ],
        [ "collect_reply", "namespaceemlabcpp_1_1testing.html#structemlabcpp_1_1testing_1_1collect__reply", "namespaceemlabcpp_1_1testing_structemlabcpp_1_1testing_1_1collect__reply_dup" ],
        [ "collect_awaiter", "classemlabcpp_1_1testing_1_1collect__awaiter.html", "classemlabcpp_1_1testing_1_1collect__awaiter" ],
        [ "collector", "classemlabcpp_1_1testing_1_1collector.html", "classemlabcpp_1_1testing_1_1collector" ],
        [ "collect_server", "classemlabcpp_1_1testing_1_1collect__server.html", "classemlabcpp_1_1testing_1_1collect__server" ],
        [ "controller", "classemlabcpp_1_1testing_1_1controller.html", "classemlabcpp_1_1testing_1_1controller" ],
        [ "controller_interface", "classemlabcpp_1_1testing_1_1controller__interface.html", "classemlabcpp_1_1testing_1_1controller__interface" ],
        [ "controller_interface_adapter", "classemlabcpp_1_1testing_1_1controller__interface__adapter.html", "classemlabcpp_1_1testing_1_1controller__interface__adapter" ],
        [ "value_type_converter", "namespaceemlabcpp_1_1testing.html#structemlabcpp_1_1testing_1_1value__type__converter", null ],
        [ "value_type_converter_getter", "structemlabcpp_1_1testing_1_1value__type__converter__getter.html", "structemlabcpp_1_1testing_1_1value__type__converter__getter" ],
        [ "value_type_converter< int64_t >", "structemlabcpp_1_1testing_1_1value__type__converter_3_01int64__t_01_4.html", null ],
        [ "value_type_converter< std::string_view >", "structemlabcpp_1_1testing_1_1value__type__converter_3_01std_1_1string__view_01_4.html", "structemlabcpp_1_1testing_1_1value__type__converter_3_01std_1_1string__view_01_4" ],
        [ "value_type_converter< std::chrono::duration< Rep, Ratio > >", "structemlabcpp_1_1testing_1_1value__type__converter_3_01std_1_1chrono_1_1duration_3_01Rep_00_01Ratio_01_4_01_4.html", "structemlabcpp_1_1testing_1_1value__type__converter_3_01std_1_1chrono_1_1duration_3_01Rep_00_01Ratio_01_4_01_4" ],
        [ "reactor_protocol_error", "namespaceemlabcpp_1_1testing.html#structemlabcpp_1_1testing_1_1reactor__protocol__error", "namespaceemlabcpp_1_1testing_structemlabcpp_1_1testing_1_1reactor__protocol__error_dup" ],
        [ "controller_protocol_error", "namespaceemlabcpp_1_1testing.html#structemlabcpp_1_1testing_1_1controller__protocol__error", "namespaceemlabcpp_1_1testing_structemlabcpp_1_1testing_1_1controller__protocol__error_dup" ],
        [ "internal_reactor_error", "namespaceemlabcpp_1_1testing.html#structemlabcpp_1_1testing_1_1internal__reactor__error", "namespaceemlabcpp_1_1testing_structemlabcpp_1_1testing_1_1internal__reactor__error_dup" ],
        [ "controller_internal_error", "namespaceemlabcpp_1_1testing.html#structemlabcpp_1_1testing_1_1controller__internal__error", "namespaceemlabcpp_1_1testing_structemlabcpp_1_1testing_1_1controller__internal__error_dup" ],
        [ "executor", "classemlabcpp_1_1testing_1_1executor.html", "classemlabcpp_1_1testing_1_1executor" ],
        [ "test_interface", "classemlabcpp_1_1testing_1_1test__interface.html", "classemlabcpp_1_1testing_1_1test__interface" ],
        [ "test_unit", "classemlabcpp_1_1testing_1_1test__unit.html", "classemlabcpp_1_1testing_1_1test__unit" ],
        [ "test_callable", "classemlabcpp_1_1testing_1_1test__callable.html", "classemlabcpp_1_1testing_1_1test__callable" ],
        [ "test_linked_callable", "classemlabcpp_1_1testing_1_1test__linked__callable.html", "classemlabcpp_1_1testing_1_1test__linked__callable" ],
        [ "param_value_request", "structemlabcpp_1_1testing_1_1param__value__request.html", "structemlabcpp_1_1testing_1_1param__value__request" ],
        [ "param_value_reply", "structemlabcpp_1_1testing_1_1param__value__reply.html", "structemlabcpp_1_1testing_1_1param__value__reply" ],
        [ "param_value_key_request", "structemlabcpp_1_1testing_1_1param__value__key__request.html", "structemlabcpp_1_1testing_1_1param__value__key__request" ],
        [ "param_value_key_reply", "structemlabcpp_1_1testing_1_1param__value__key__reply.html", "structemlabcpp_1_1testing_1_1param__value__key__reply" ],
        [ "param_child_request", "structemlabcpp_1_1testing_1_1param__child__request.html", "structemlabcpp_1_1testing_1_1param__child__request" ],
        [ "param_child_reply", "structemlabcpp_1_1testing_1_1param__child__reply.html", "structemlabcpp_1_1testing_1_1param__child__reply" ],
        [ "param_child_count_request", "structemlabcpp_1_1testing_1_1param__child__count__request.html", "structemlabcpp_1_1testing_1_1param__child__count__request" ],
        [ "param_child_count_reply", "structemlabcpp_1_1testing_1_1param__child__count__reply.html", "structemlabcpp_1_1testing_1_1param__child__count__reply" ],
        [ "param_key_request", "structemlabcpp_1_1testing_1_1param__key__request.html", "structemlabcpp_1_1testing_1_1param__key__request" ],
        [ "param_key_reply", "structemlabcpp_1_1testing_1_1param__key__reply.html", "structemlabcpp_1_1testing_1_1param__key__reply" ],
        [ "param_type_request", "structemlabcpp_1_1testing_1_1param__type__request.html", "structemlabcpp_1_1testing_1_1param__type__request" ],
        [ "param_type_reply", "structemlabcpp_1_1testing_1_1param__type__reply.html", "structemlabcpp_1_1testing_1_1param__type__reply" ],
        [ "param_error", "structemlabcpp_1_1testing_1_1param__error.html", "structemlabcpp_1_1testing_1_1param__error" ],
        [ "params_awaiter", "structemlabcpp_1_1testing_1_1params__awaiter.html", "structemlabcpp_1_1testing_1_1params__awaiter" ],
        [ "param_value_processor", "structemlabcpp_1_1testing_1_1param__value__processor.html", "structemlabcpp_1_1testing_1_1param__value__processor" ],
        [ "param_value_key_processor", "structemlabcpp_1_1testing_1_1param__value__key__processor.html", "structemlabcpp_1_1testing_1_1param__value__key__processor" ],
        [ "param_type_processor", "structemlabcpp_1_1testing_1_1param__type__processor.html", "structemlabcpp_1_1testing_1_1param__type__processor" ],
        [ "param_child_processor", "structemlabcpp_1_1testing_1_1param__child__processor.html", "structemlabcpp_1_1testing_1_1param__child__processor" ],
        [ "param_child_count_processor", "structemlabcpp_1_1testing_1_1param__child__count__processor.html", "structemlabcpp_1_1testing_1_1param__child__count__processor" ],
        [ "param_key_processor", "structemlabcpp_1_1testing_1_1param__key__processor.html", "structemlabcpp_1_1testing_1_1param__key__processor" ],
        [ "parameters", "classemlabcpp_1_1testing_1_1parameters.html", "classemlabcpp_1_1testing_1_1parameters" ],
        [ "parameters_server", "classemlabcpp_1_1testing_1_1parameters__server.html", "classemlabcpp_1_1testing_1_1parameters__server" ],
        [ "get_property", "structemlabcpp_1_1testing_1_1get__property.html", "structemlabcpp_1_1testing_1_1get__property" ],
        [ "get_count_reply", "structemlabcpp_1_1testing_1_1get__count__reply.html", "structemlabcpp_1_1testing_1_1get__count__reply" ],
        [ "get_suite_name_reply", "structemlabcpp_1_1testing_1_1get__suite__name__reply.html", "structemlabcpp_1_1testing_1_1get__suite__name__reply" ],
        [ "get_suite_date_reply", "structemlabcpp_1_1testing_1_1get__suite__date__reply.html", "structemlabcpp_1_1testing_1_1get__suite__date__reply" ],
        [ "get_test_name_request", "structemlabcpp_1_1testing_1_1get__test__name__request.html", "structemlabcpp_1_1testing_1_1get__test__name__request" ],
        [ "get_test_name_reply", "structemlabcpp_1_1testing_1_1get__test__name__reply.html", "structemlabcpp_1_1testing_1_1get__test__name__reply" ],
        [ "tree_error_reply", "structemlabcpp_1_1testing_1_1tree__error__reply.html", "structemlabcpp_1_1testing_1_1tree__error__reply" ],
        [ "test_finished", "structemlabcpp_1_1testing_1_1test__finished.html", "structemlabcpp_1_1testing_1_1test__finished" ],
        [ "exec_request", "structemlabcpp_1_1testing_1_1exec__request.html", "structemlabcpp_1_1testing_1_1exec__request" ],
        [ "error", "structemlabcpp_1_1testing_1_1error.html", "structemlabcpp_1_1testing_1_1error" ],
        [ "no_response_error", "structemlabcpp_1_1testing_1_1no__response__error.html", "structemlabcpp_1_1testing_1_1no__response__error" ],
        [ "wrong_type_error", "structemlabcpp_1_1testing_1_1wrong__type__error.html", "structemlabcpp_1_1testing_1_1wrong__type__error" ],
        [ "input_message_protocol_error", "structemlabcpp_1_1testing_1_1input__message__protocol__error.html", "structemlabcpp_1_1testing_1_1input__message__protocol__error" ],
        [ "reactor_internal_error_report", "structemlabcpp_1_1testing_1_1reactor__internal__error__report.html", "structemlabcpp_1_1testing_1_1reactor__internal__error__report" ],
        [ "packet_def", "structemlabcpp_1_1testing_1_1packet__def.html", "structemlabcpp_1_1testing_1_1packet__def" ],
        [ "reactor", "classemlabcpp_1_1testing_1_1reactor.html", "classemlabcpp_1_1testing_1_1reactor" ],
        [ "reactor_interface_adapter", "classemlabcpp_1_1testing_1_1reactor__interface__adapter.html", "classemlabcpp_1_1testing_1_1reactor__interface__adapter" ],
        [ "record", "classemlabcpp_1_1testing_1_1record.html", "classemlabcpp_1_1testing_1_1record" ]
      ] ],
      [ "min_max", "structemlabcpp_1_1min__max.html", "structemlabcpp_1_1min__max" ],
      [ "convert_to", "structemlabcpp_1_1convert__to.html", "structemlabcpp_1_1convert__to" ],
      [ "bounded", "classemlabcpp_1_1bounded.html", "classemlabcpp_1_1bounded" ],
      [ "pretty_printer< bounded< T, MinVal, MaxVal > >", "structemlabcpp_1_1pretty__printer_3_01bounded_3_01T_00_01MinVal_00_01MaxVal_01_4_01_4.html", "structemlabcpp_1_1pretty__printer_3_01bounded_3_01T_00_01MinVal_00_01MaxVal_01_4_01_4" ],
      [ "defer", "classemlabcpp_1_1defer.html", "classemlabcpp_1_1defer" ],
      [ "either", "classemlabcpp_1_1either.html", "classemlabcpp_1_1either" ],
      [ "empty_assembly_tag", "namespaceemlabcpp.html#structemlabcpp_1_1empty__assembly__tag", null ],
      [ "bounded_view", "classemlabcpp_1_1bounded__view.html", "classemlabcpp_1_1bounded__view" ],
      [ "contiguous_request_adapter", "classemlabcpp_1_1contiguous__request__adapter.html", "classemlabcpp_1_1contiguous__request__adapter" ],
      [ "contiguous_object_handle", "classemlabcpp_1_1contiguous__object__handle.html", "classemlabcpp_1_1contiguous__object__handle" ],
      [ "contiguous_array_handle", "classemlabcpp_1_1contiguous__array__handle.html", "classemlabcpp_1_1contiguous__array__handle" ],
      [ "contiguous_node", "classemlabcpp_1_1contiguous__node.html", "classemlabcpp_1_1contiguous__node" ],
      [ "contiguous_tree", "classemlabcpp_1_1contiguous__tree.html", "classemlabcpp_1_1contiguous__tree" ],
      [ "derived_storage", "classemlabcpp_1_1derived__storage.html", "classemlabcpp_1_1derived__storage" ],
      [ "function_view", "namespaceemlabcpp.html#classemlabcpp_1_1function__view", null ],
      [ "function_view< ReturnType(ArgTypes...) >", "classemlabcpp_1_1function__view_3_01ReturnType_07ArgTypes_8_8_8_08_01_4.html", "classemlabcpp_1_1function__view_3_01ReturnType_07ArgTypes_8_8_8_08_01_4" ],
      [ "point", "classemlabcpp_1_1point.html", "classemlabcpp_1_1point" ],
      [ "pose_distance", "namespaceemlabcpp.html#structemlabcpp_1_1pose__distance", "namespaceemlabcpp_structemlabcpp_1_1pose__distance_dup" ],
      [ "pose", "structemlabcpp_1_1pose.html", "structemlabcpp_1_1pose" ],
      [ "quaternion", "classemlabcpp_1_1quaternion.html", "classemlabcpp_1_1quaternion" ],
      [ "simplex", "classemlabcpp_1_1simplex.html", "classemlabcpp_1_1simplex" ],
      [ "vec_point_base", "classemlabcpp_1_1vec__point__base.html", "classemlabcpp_1_1vec__point__base" ],
      [ "vector", "classemlabcpp_1_1vector.html", "classemlabcpp_1_1vector" ],
      [ "linked_list_node", "classemlabcpp_1_1linked__list__node.html", "classemlabcpp_1_1linked__list__node" ],
      [ "log_colors", "namespaceemlabcpp.html#structemlabcpp_1_1log__colors", "namespaceemlabcpp_structemlabcpp_1_1log__colors_dup" ],
      [ "log_color_stub", "namespaceemlabcpp.html#structemlabcpp_1_1log__color__stub", "namespaceemlabcpp_structemlabcpp_1_1log__color__stub_dup" ],
      [ "timelog", "structemlabcpp_1_1timelog.html", "structemlabcpp_1_1timelog" ],
      [ "pretty_printer< timelog >", "structemlabcpp_1_1pretty__printer_3_01timelog_01_4.html", "structemlabcpp_1_1pretty__printer_3_01timelog_01_4" ],
      [ "matrix", "classemlabcpp_1_1matrix.html", "classemlabcpp_1_1matrix" ],
      [ "transposed_matrix", "classemlabcpp_1_1transposed__matrix.html", "classemlabcpp_1_1transposed__matrix" ],
      [ "identity_matrix", "classemlabcpp_1_1identity__matrix.html", "classemlabcpp_1_1identity__matrix" ],
      [ "rowcol_submatrix", "classemlabcpp_1_1rowcol__submatrix.html", "classemlabcpp_1_1rowcol__submatrix" ],
      [ "pretty_printer< T >", "structemlabcpp_1_1pretty__printer_3_01T_01_4.html", "structemlabcpp_1_1pretty__printer_3_01T_01_4" ],
      [ "pretty_printer", "namespaceemlabcpp.html#structemlabcpp_1_1pretty__printer", null ],
      [ "buffer_writer", "structemlabcpp_1_1buffer__writer.html", "structemlabcpp_1_1buffer__writer" ],
      [ "recursive_writer", "structemlabcpp_1_1recursive__writer.html", "structemlabcpp_1_1recursive__writer" ],
      [ "pretty_stream", "structemlabcpp_1_1pretty__stream.html", "structemlabcpp_1_1pretty__stream" ],
      [ "pretty_printer< signed char >", "structemlabcpp_1_1pretty__printer_3_01signed_01char_01_4.html", "structemlabcpp_1_1pretty__printer_3_01signed_01char_01_4" ],
      [ "pretty_printer< short int >", "structemlabcpp_1_1pretty__printer_3_01short_01int_01_4.html", "structemlabcpp_1_1pretty__printer_3_01short_01int_01_4" ],
      [ "pretty_printer< int >", "structemlabcpp_1_1pretty__printer_3_01int_01_4.html", "structemlabcpp_1_1pretty__printer_3_01int_01_4" ],
      [ "pretty_printer< long int >", "structemlabcpp_1_1pretty__printer_3_01long_01int_01_4.html", "structemlabcpp_1_1pretty__printer_3_01long_01int_01_4" ],
      [ "pretty_printer< unsigned char >", "structemlabcpp_1_1pretty__printer_3_01unsigned_01char_01_4.html", "structemlabcpp_1_1pretty__printer_3_01unsigned_01char_01_4" ],
      [ "pretty_printer< short unsigned >", "structemlabcpp_1_1pretty__printer_3_01short_01unsigned_01_4.html", "structemlabcpp_1_1pretty__printer_3_01short_01unsigned_01_4" ],
      [ "pretty_printer< unsigned >", "structemlabcpp_1_1pretty__printer_3_01unsigned_01_4.html", "structemlabcpp_1_1pretty__printer_3_01unsigned_01_4" ],
      [ "pretty_printer< long unsigned >", "structemlabcpp_1_1pretty__printer_3_01long_01unsigned_01_4.html", "structemlabcpp_1_1pretty__printer_3_01long_01unsigned_01_4" ],
      [ "pretty_printer< float >", "structemlabcpp_1_1pretty__printer_3_01float_01_4.html", "structemlabcpp_1_1pretty__printer_3_01float_01_4" ],
      [ "pretty_printer< char >", "structemlabcpp_1_1pretty__printer_3_01char_01_4.html", "structemlabcpp_1_1pretty__printer_3_01char_01_4" ],
      [ "pretty_printer< char[N] >", "structemlabcpp_1_1pretty__printer_3_01char_0fN_0e_01_4.html", "structemlabcpp_1_1pretty__printer_3_01char_0fN_0e_01_4" ],
      [ "pretty_printer< std::string >", "structemlabcpp_1_1pretty__printer_3_01std_1_1string_01_4.html", "structemlabcpp_1_1pretty__printer_3_01std_1_1string_01_4" ],
      [ "pretty_printer< bool >", "structemlabcpp_1_1pretty__printer_3_01bool_01_4.html", "structemlabcpp_1_1pretty__printer_3_01bool_01_4" ],
      [ "pretty_printer< view< Iterator > >", "structemlabcpp_1_1pretty__printer_3_01view_3_01Iterator_01_4_01_4.html", "structemlabcpp_1_1pretty__printer_3_01view_3_01Iterator_01_4_01_4" ],
      [ "pretty_printer< std::span< T, N > >", "structemlabcpp_1_1pretty__printer_3_01std_1_1span_3_01T_00_01N_01_4_01_4.html", "structemlabcpp_1_1pretty__printer_3_01std_1_1span_3_01T_00_01N_01_4_01_4" ],
      [ "pretty_printer< std::array< T, N > >", "structemlabcpp_1_1pretty__printer_3_01std_1_1array_3_01T_00_01N_01_4_01_4.html", "structemlabcpp_1_1pretty__printer_3_01std_1_1array_3_01T_00_01N_01_4_01_4" ],
      [ "pretty_printer< std::filesystem::path >", "structemlabcpp_1_1pretty__printer_3_01std_1_1filesystem_1_1path_01_4.html", "structemlabcpp_1_1pretty__printer_3_01std_1_1filesystem_1_1path_01_4" ],
      [ "pretty_printer< std::vector< T > >", "structemlabcpp_1_1pretty__printer_3_01std_1_1vector_3_01T_01_4_01_4.html", "structemlabcpp_1_1pretty__printer_3_01std_1_1vector_3_01T_01_4_01_4" ],
      [ "pretty_printer< std::set< T > >", "structemlabcpp_1_1pretty__printer_3_01std_1_1set_3_01T_01_4_01_4.html", "structemlabcpp_1_1pretty__printer_3_01std_1_1set_3_01T_01_4_01_4" ],
      [ "pretty_printer< std::map< K, T > >", "structemlabcpp_1_1pretty__printer_3_01std_1_1map_3_01K_00_01T_01_4_01_4.html", "structemlabcpp_1_1pretty__printer_3_01std_1_1map_3_01K_00_01T_01_4_01_4" ],
      [ "pretty_printer< std::unordered_map< K, T > >", "structemlabcpp_1_1pretty__printer_3_01std_1_1unordered__map_3_01K_00_01T_01_4_01_4.html", "structemlabcpp_1_1pretty__printer_3_01std_1_1unordered__map_3_01K_00_01T_01_4_01_4" ],
      [ "pretty_printer< std::variant< Ts... > >", "structemlabcpp_1_1pretty__printer_3_01std_1_1variant_3_01Ts_8_8_8_01_4_01_4.html", "structemlabcpp_1_1pretty__printer_3_01std_1_1variant_3_01Ts_8_8_8_01_4_01_4" ],
      [ "pretty_printer< std::tuple< Ts... > >", "structemlabcpp_1_1pretty__printer_3_01std_1_1tuple_3_01Ts_8_8_8_01_4_01_4.html", "structemlabcpp_1_1pretty__printer_3_01std_1_1tuple_3_01Ts_8_8_8_01_4_01_4" ],
      [ "pretty_printer< std::pair< LH, RH > >", "structemlabcpp_1_1pretty__printer_3_01std_1_1pair_3_01LH_00_01RH_01_4_01_4.html", "structemlabcpp_1_1pretty__printer_3_01std_1_1pair_3_01LH_00_01RH_01_4_01_4" ],
      [ "pretty_printer< std::chrono::duration< Rep, Period > >", "structemlabcpp_1_1pretty__printer_3_01std_1_1chrono_1_1duration_3_01Rep_00_01Period_01_4_01_4.html", "structemlabcpp_1_1pretty__printer_3_01std_1_1chrono_1_1duration_3_01Rep_00_01Period_01_4_01_4" ],
      [ "pretty_printer< std::bitset< N > >", "structemlabcpp_1_1pretty__printer_3_01std_1_1bitset_3_01N_01_4_01_4.html", "structemlabcpp_1_1pretty__printer_3_01std_1_1bitset_3_01N_01_4_01_4" ],
      [ "simple_stream", "classemlabcpp_1_1simple__stream.html", "classemlabcpp_1_1simple__stream" ],
      [ "generic_iterator", "classemlabcpp_1_1generic__iterator.html", "classemlabcpp_1_1generic__iterator" ],
      [ "matcher", "structemlabcpp_1_1matcher.html", "structemlabcpp_1_1matcher" ],
      [ "physical_quantity", "structemlabcpp_1_1physical__quantity.html", "structemlabcpp_1_1physical__quantity" ],
      [ "pid_coefficients", "namespaceemlabcpp.html#structemlabcpp_1_1pid__coefficients", "namespaceemlabcpp_structemlabcpp_1_1pid__coefficients_dup" ],
      [ "pid_config", "namespaceemlabcpp.html#structemlabcpp_1_1pid__config", "namespaceemlabcpp_structemlabcpp_1_1pid__config_dup" ],
      [ "pid", "structemlabcpp_1_1pid.html", "structemlabcpp_1_1pid" ],
      [ "pretty_printer< protocol::message< N > >", "structemlabcpp_1_1pretty__printer_3_01protocol_1_1message_3_01N_01_4_01_4.html", "structemlabcpp_1_1pretty__printer_3_01protocol_1_1message_3_01N_01_4_01_4" ],
      [ "pretty_printer< protocol::sizeless_message< N > >", "structemlabcpp_1_1pretty__printer_3_01protocol_1_1sizeless__message_3_01N_01_4_01_4.html", "structemlabcpp_1_1pretty__printer_3_01protocol_1_1sizeless__message_3_01N_01_4_01_4" ],
      [ "pretty_printer< protocol::mark >", "structemlabcpp_1_1pretty__printer_3_01protocol_1_1mark_01_4.html", "structemlabcpp_1_1pretty__printer_3_01protocol_1_1mark_01_4" ],
      [ "pretty_printer< protocol::error_record >", "structemlabcpp_1_1pretty__printer_3_01protocol_1_1error__record_01_4.html", "structemlabcpp_1_1pretty__printer_3_01protocol_1_1error__record_01_4" ],
      [ "quantity", "classemlabcpp_1_1quantity.html", "classemlabcpp_1_1quantity" ],
      [ "tagged_quantity", "classemlabcpp_1_1tagged__quantity.html", "classemlabcpp_1_1tagged__quantity" ],
      [ "static_circular_buffer_iterator", "classemlabcpp_1_1static__circular__buffer__iterator.html", "classemlabcpp_1_1static__circular__buffer__iterator" ],
      [ "static_circular_buffer", "classemlabcpp_1_1static__circular__buffer.html", "classemlabcpp_1_1static__circular__buffer" ],
      [ "static_function_base", "namespaceemlabcpp.html#classemlabcpp_1_1static__function__base", null ],
      [ "static_function_base< ReturnType(ArgTypes...), Capacity, Align >", "classemlabcpp_1_1static__function__base_3_01ReturnType_07ArgTypes_8_8_8_08_00_01Capacity_00_01Align_01_4.html", "classemlabcpp_1_1static__function__base_3_01ReturnType_07ArgTypes_8_8_8_08_00_01Capacity_00_01Align_01_4" ],
      [ "static_storage", "classemlabcpp_1_1static__storage.html", "classemlabcpp_1_1static__storage" ],
      [ "static_vector", "classemlabcpp_1_1static__vector.html", "classemlabcpp_1_1static__vector" ],
      [ "pretty_printer< static_vector< T, N > >", "structemlabcpp_1_1pretty__printer_3_01static__vector_3_01T_00_01N_01_4_01_4.html", "structemlabcpp_1_1pretty__printer_3_01static__vector_3_01T_00_01N_01_4_01_4" ],
      [ "iterator_of", "namespaceemlabcpp.html#structemlabcpp_1_1iterator__of", "namespaceemlabcpp_structemlabcpp_1_1iterator__of_dup" ],
      [ "is_view", "structemlabcpp_1_1is__view.html", null ],
      [ "are_same", "namespaceemlabcpp.html#structemlabcpp_1_1are__same", null ],
      [ "are_same< T, Ts... >", "structemlabcpp_1_1are__same_3_01T_00_01Ts_8_8_8_01_4.html", null ],
      [ "are_same<>", "structemlabcpp_1_1are__same_3_4.html", null ],
      [ "tuple_has_type", "namespaceemlabcpp.html#structemlabcpp_1_1tuple__has__type", null ],
      [ "tuple_has_type< T, std::tuple< Us... > >", "structemlabcpp_1_1tuple__has__type_3_01T_00_01std_1_1tuple_3_01Us_8_8_8_01_4_01_4.html", null ],
      [ "is_std_tuple", "structemlabcpp_1_1is__std__tuple.html", null ],
      [ "is_std_array", "structemlabcpp_1_1is__std__array.html", null ],
      [ "is_std_vector", "structemlabcpp_1_1is__std__vector.html", null ],
      [ "static_size", "structemlabcpp_1_1static__size.html", null ],
      [ "signature_of", "namespaceemlabcpp.html#structemlabcpp_1_1signature__of", null ],
      [ "signature_of< ReturnType(Class::*)(Args...) >", "structemlabcpp_1_1signature__of_3_01ReturnType_07Class_1_1_5_08_07Args_8_8_8_08_01_4.html", "structemlabcpp_1_1signature__of_3_01ReturnType_07Class_1_1_5_08_07Args_8_8_8_08_01_4" ],
      [ "signature_of< ReturnType(Class::*)(Args...) const >", "structemlabcpp_1_1signature__of_3_01ReturnType_07Class_1_1_5_08_07Args_8_8_8_08_01const_01_4.html", null ],
      [ "signature_of< ReturnType(Args...) >", "namespaceemlabcpp.html#structemlabcpp_1_1signature__of_3_01ReturnType_07Args_8_8_8_08_01_4", "namespaceemlabcpp_structemlabcpp_1_1signature__of_3_01ReturnType_07Args_8_8_8_08_01_4_dup" ],
      [ "mapped", "namespaceemlabcpp.html#structemlabcpp_1_1mapped", null ],
      [ "mapped< Container, UnaryCallable >", "structemlabcpp_1_1mapped_3_01Container_00_01UnaryCallable_01_4.html", "structemlabcpp_1_1mapped_3_01Container_00_01UnaryCallable_01_4" ],
      [ "tag", "structemlabcpp_1_1tag.html", "structemlabcpp_1_1tag" ],
      [ "select_utype", "namespaceemlabcpp.html#structemlabcpp_1_1select__utype", null ],
      [ "type_map", "namespaceemlabcpp.html#structemlabcpp_1_1type__map", null ],
      [ "type_map< std::tuple< Ts... >, Fun >", "namespaceemlabcpp.html#structemlabcpp_1_1type__map_3_01std_1_1tuple_3_01Ts_8_8_8_01_4_00_01Fun_01_4", "namespaceemlabcpp_structemlabcpp_1_1type__map_3_01std_1_1tuple_3_01Ts_8_8_8_01_4_00_01Fun_01_4_dup" ],
      [ "type_tag", "namespaceemlabcpp.html#structemlabcpp_1_1type__tag", "namespaceemlabcpp_structemlabcpp_1_1type__tag_dup" ],
      [ "index_of", "namespaceemlabcpp.html#structemlabcpp_1_1index__of", null ],
      [ "index_of< T, std::variant< Ts... > >", "structemlabcpp_1_1index__of_3_01T_00_01std_1_1variant_3_01Ts_8_8_8_01_4_01_4.html", null ],
      [ "view", "classemlabcpp_1_1view.html", "classemlabcpp_1_1view" ],
      [ "zip_iterator", "classemlabcpp_1_1zip__iterator.html", "classemlabcpp_1_1zip__iterator" ]
    ] ],
    [ "std", null, [
      [ "iterator_traits< emlabcpp::iterators::access_iterator< Iterator, AccessCallable > >", "structstd_1_1iterator__traits_3_01emlabcpp_1_1iterators_1_1access__iterator_3_01Iterator_00_01AccessCallable_01_4_01_4.html", "structstd_1_1iterator__traits_3_01emlabcpp_1_1iterators_1_1access__iterator_3_01Iterator_00_01AccessCallable_01_4_01_4" ],
      [ "iterator_traits< emlabcpp::iterators::convert_iterator< T, Iterator > >", "structstd_1_1iterator__traits_3_01emlabcpp_1_1iterators_1_1convert__iterator_3_01T_00_01Iterator_01_4_01_4.html", "structstd_1_1iterator__traits_3_01emlabcpp_1_1iterators_1_1convert__iterator_3_01T_00_01Iterator_01_4_01_4" ],
      [ "iterator_traits< emlabcpp::iterators::numeric_iterator< T > >", "structstd_1_1iterator__traits_3_01emlabcpp_1_1iterators_1_1numeric__iterator_3_01T_01_4_01_4.html", "structstd_1_1iterator__traits_3_01emlabcpp_1_1iterators_1_1numeric__iterator_3_01T_01_4_01_4" ],
      [ "iterator_traits< emlabcpp::iterators::subscript_iterator< Container > >", "structstd_1_1iterator__traits_3_01emlabcpp_1_1iterators_1_1subscript__iterator_3_01Container_01_4_01_4.html", "structstd_1_1iterator__traits_3_01emlabcpp_1_1iterators_1_1subscript__iterator_3_01Container_01_4_01_4" ],
      [ "numeric_limits< T >", "structstd_1_1numeric__limits_3_01T_01_4.html", "structstd_1_1numeric__limits_3_01T_01_4" ],
      [ "hash< T >", "structstd_1_1hash_3_01T_01_4.html", "structstd_1_1hash_3_01T_01_4" ],
      [ "iterator_traits< emlabcpp::static_circular_buffer_iterator< Container > >", "structstd_1_1iterator__traits_3_01emlabcpp_1_1static__circular__buffer__iterator_3_01Container_01_4_01_4.html", "structstd_1_1iterator__traits_3_01emlabcpp_1_1static__circular__buffer__iterator_3_01Container_01_4_01_4" ],
      [ "iterator_traits< emlabcpp::zip_iterator< Iterators... > >", "structstd_1_1iterator__traits_3_01emlabcpp_1_1zip__iterator_3_01Iterators_8_8_8_01_4_01_4.html", "structstd_1_1iterator__traits_3_01emlabcpp_1_1zip__iterator_3_01Iterators_8_8_8_01_4_01_4" ]
    ] ]
];