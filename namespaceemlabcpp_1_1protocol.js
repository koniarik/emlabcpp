var namespaceemlabcpp_1_1protocol =
[
    [ "detail", "namespaceemlabcpp_1_1protocol_1_1detail.html", [
      [ "message_derived_test", "namespaceemlabcpp_1_1protocol_1_1detail.html#aba82f9bdb1604d0b12a5f9ce21d48376", null ]
    ] ],
    [ "multiplexed_endpoint", "classemlabcpp_1_1protocol_1_1multiplexed__endpoint.html", "classemlabcpp_1_1protocol_1_1multiplexed__endpoint" ],
    [ "conversion_result", "structemlabcpp_1_1protocol_1_1conversion__result.html", "structemlabcpp_1_1protocol_1_1conversion__result" ],
    [ "endianess_wrapper", "structemlabcpp_1_1protocol_1_1endianess__wrapper.html", "structemlabcpp_1_1protocol_1_1endianess__wrapper" ],
    [ "group", "namespaceemlabcpp_1_1protocol.html#structemlabcpp_1_1protocol_1_1group", "namespaceemlabcpp_1_1protocol_structemlabcpp_1_1protocol_1_1group_dup" ],
    [ "tag_group", "namespaceemlabcpp_1_1protocol.html#structemlabcpp_1_1protocol_1_1tag__group", "namespaceemlabcpp_1_1protocol_structemlabcpp_1_1protocol_1_1tag__group_dup" ],
    [ "sized_buffer", "namespaceemlabcpp_1_1protocol.html#structemlabcpp_1_1protocol_1_1sized__buffer", "namespaceemlabcpp_1_1protocol_structemlabcpp_1_1protocol_1_1sized__buffer_dup" ],
    [ "value_offset", "structemlabcpp_1_1protocol_1_1value__offset.html", "structemlabcpp_1_1protocol_1_1value__offset" ],
    [ "converter_def_type_base", "structemlabcpp_1_1protocol_1_1converter__def__type__base.html", null ],
    [ "command", "structemlabcpp_1_1protocol_1_1command.html", "structemlabcpp_1_1protocol_1_1command" ],
    [ "command_group", "structemlabcpp_1_1protocol_1_1command__group.html", "structemlabcpp_1_1protocol_1_1command__group" ],
    [ "command_group< Endianess >", "namespaceemlabcpp_1_1protocol.html#structemlabcpp_1_1protocol_1_1command__group_3_01Endianess_01_4", "namespaceemlabcpp_1_1protocol_structemlabcpp_1_1protocol_1_1command__group_3_01Endianess_01_4_dup" ],
    [ "converter", "namespaceemlabcpp_1_1protocol.html#structemlabcpp_1_1protocol_1_1converter", null ],
    [ "backup_converter", "namespaceemlabcpp_1_1protocol.html#structemlabcpp_1_1protocol_1_1backup__converter", null ],
    [ "converter< D, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01D_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01D_00_01Endianess_01_4" ],
    [ "converter< std::array< D, N >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1array_3_01D_00_01N_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1array_3_01D_00_01N_01_4_00_01Endianess_01_4" ],
    [ "converter< std::tuple< Ds... >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1tuple_3_01Ds_8_8_8_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1tuple_3_01Ds_8_8_8_01_4_00_01Endianess_01_4" ],
    [ "converter< std::variant< Ds... >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1variant_3_01Ds_8_8_8_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1variant_3_01Ds_8_8_8_01_4_00_01Endianess_01_4" ],
    [ "converter< std::monostate, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1monostate_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1monostate_00_01Endianess_01_4" ],
    [ "converter< std::optional< T >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1optional_3_01T_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1optional_3_01T_01_4_00_01Endianess_01_4" ],
    [ "converter< std::bitset< N >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1bitset_3_01N_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01std_1_1bitset_3_01N_01_4_00_01Endianess_01_4" ],
    [ "converter< message< N >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01message_3_01N_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01message_3_01N_01_4_00_01Endianess_01_4" ],
    [ "converter< sizeless_message< N >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01sizeless__message_3_01N_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01sizeless__message_3_01N_01_4_00_01Endianess_01_4" ],
    [ "converter< value_offset< D, Offset >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01value__offset_3_01D_00_01Offset_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01value__offset_3_01D_00_01Offset_01_4_00_01Endianess_01_4" ],
    [ "converter< bounded< D, Min, Max >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01bounded_3_01D_00_01Min_00_01Max_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01bounded_3_01D_00_01Min_00_01Max_01_4_00_01Endianess_01_4" ],
    [ "converter< sized_buffer< CounterDef, D >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01sized__buffer_3_01CounterDef_00_01D_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01sized__buffer_3_01CounterDef_00_01D_01_4_00_01Endianess_01_4" ],
    [ "converter< tag< V >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01tag_3_01V_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01tag_3_01V_01_4_00_01Endianess_01_4" ],
    [ "converter< tag_group< Ds... >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01tag__group_3_01Ds_8_8_8_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01tag__group_3_01Ds_8_8_8_01_4_00_01Endianess_01_4" ],
    [ "converter< group< Ds... >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01group_3_01Ds_8_8_8_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01group_3_01Ds_8_8_8_01_4_00_01Endianess_01_4" ],
    [ "converter< endianess_wrapper< Endianess, D >, ParentEndianess >", "structemlabcpp_1_1protocol_1_1converter_3_01endianess__wrapper_3_01Endianess_00_01D_01_4_00_01ParentEndianess_01_4.html", null ],
    [ "converter< string_buffer< N >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01string__buffer_3_01N_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01string__buffer_3_01N_01_4_00_01Endianess_01_4" ],
    [ "converter< error_record, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01error__record_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01error__record_00_01Endianess_01_4" ],
    [ "converter< static_vector< T, N >, Endianess >", "structemlabcpp_1_1protocol_1_1converter_3_01static__vector_3_01T_00_01N_01_4_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1converter_3_01static__vector_3_01T_00_01N_01_4_00_01Endianess_01_4" ],
    [ "backup_converter< T, Endianess >", "structemlabcpp_1_1protocol_1_1backup__converter_3_01T_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1backup__converter_3_01T_00_01Endianess_01_4" ],
    [ "memcpy_converter", "structemlabcpp_1_1protocol_1_1memcpy__converter.html", "structemlabcpp_1_1protocol_1_1memcpy__converter" ],
    [ "endpoint_load_error", "namespaceemlabcpp_1_1protocol.html#structemlabcpp_1_1protocol_1_1endpoint__load__error", null ],
    [ "endpoint", "classemlabcpp_1_1protocol_1_1endpoint.html", "classemlabcpp_1_1protocol_1_1endpoint" ],
    [ "error_record", "namespaceemlabcpp_1_1protocol.html#structemlabcpp_1_1protocol_1_1error__record", "namespaceemlabcpp_1_1protocol_structemlabcpp_1_1protocol_1_1error__record_dup" ],
    [ "handler", "structemlabcpp_1_1protocol_1_1handler.html", "structemlabcpp_1_1protocol_1_1handler" ],
    [ "message", "classemlabcpp_1_1protocol_1_1message.html", "classemlabcpp_1_1protocol_1_1message" ],
    [ "sizeless_message", "classemlabcpp_1_1protocol_1_1sizeless__message.html", "classemlabcpp_1_1protocol_1_1sizeless__message" ],
    [ "packet", "structemlabcpp_1_1protocol_1_1packet.html", "structemlabcpp_1_1protocol_1_1packet" ],
    [ "packet_handler", "structemlabcpp_1_1protocol_1_1packet__handler.html", "structemlabcpp_1_1protocol_1_1packet__handler" ],
    [ "register_handler", "structemlabcpp_1_1protocol_1_1register__handler.html", "structemlabcpp_1_1protocol_1_1register__handler" ],
    [ "register_pair", "structemlabcpp_1_1protocol_1_1register__pair.html", "structemlabcpp_1_1protocol_1_1register__pair" ],
    [ "register_map", "classemlabcpp_1_1protocol_1_1register__map.html", "classemlabcpp_1_1protocol_1_1register__map" ],
    [ "sequencer_read_request", "structemlabcpp_1_1protocol_1_1sequencer__read__request.html", "structemlabcpp_1_1protocol_1_1sequencer__read__request" ],
    [ "sequencer", "classemlabcpp_1_1protocol_1_1sequencer.html", "classemlabcpp_1_1protocol_1_1sequencer" ],
    [ "serializer", "structemlabcpp_1_1protocol_1_1serializer.html", "structemlabcpp_1_1protocol_1_1serializer" ],
    [ "serializer< float, Endianess >", "structemlabcpp_1_1protocol_1_1serializer_3_01float_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1serializer_3_01float_00_01Endianess_01_4" ],
    [ "serializer< bool, Endianess >", "structemlabcpp_1_1protocol_1_1serializer_3_01bool_00_01Endianess_01_4.html", "structemlabcpp_1_1protocol_1_1serializer_3_01bool_00_01Endianess_01_4" ],
    [ "proto_traits", "namespaceemlabcpp_1_1protocol.html#structemlabcpp_1_1protocol_1_1proto__traits", null ],
    [ "backup_proto_traits", "namespaceemlabcpp_1_1protocol.html#structemlabcpp_1_1protocol_1_1backup__proto__traits", null ],
    [ "proto_traits< D >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01D_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01D_01_4" ],
    [ "proto_traits< std::array< D, N > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1array_3_01D_00_01N_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1array_3_01D_00_01N_01_4_01_4" ],
    [ "proto_traits< std::tuple< Ds... > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1tuple_3_01Ds_8_8_8_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1tuple_3_01Ds_8_8_8_01_4_01_4" ],
    [ "proto_traits< std::variant< Ds... > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1variant_3_01Ds_8_8_8_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1variant_3_01Ds_8_8_8_01_4_01_4" ],
    [ "proto_traits< std::monostate >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1monostate_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1monostate_01_4" ],
    [ "proto_traits< std::bitset< N > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1bitset_3_01N_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1bitset_3_01N_01_4_01_4" ],
    [ "proto_traits< sizeless_message< N > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01sizeless__message_3_01N_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01sizeless__message_3_01N_01_4_01_4" ],
    [ "proto_traits< message< N > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01message_3_01N_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01message_3_01N_01_4_01_4" ],
    [ "proto_traits< value_offset< D, Offset > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01value__offset_3_01D_00_01Offset_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01value__offset_3_01D_00_01Offset_01_4_01_4" ],
    [ "proto_traits< bounded< D, Min, Max > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01bounded_3_01D_00_01Min_00_01Max_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01bounded_3_01D_00_01Min_00_01Max_01_4_01_4" ],
    [ "proto_traits< sized_buffer< CounterType, D > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01sized__buffer_3_01CounterType_00_01D_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01sized__buffer_3_01CounterType_00_01D_01_4_01_4" ],
    [ "proto_traits< tag< V > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01tag_3_01V_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01tag_3_01V_01_4_01_4" ],
    [ "proto_traits< group< Ds... > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01group_3_01Ds_8_8_8_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01group_3_01Ds_8_8_8_01_4_01_4" ],
    [ "proto_traits< tag_group< Ds... > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01tag__group_3_01Ds_8_8_8_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01tag__group_3_01Ds_8_8_8_01_4_01_4" ],
    [ "proto_traits< endianess_wrapper< Endianess, D > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01endianess__wrapper_3_01Endianess_00_01D_01_4_01_4.html", null ],
    [ "proto_traits< string_buffer< N > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01string__buffer_3_01N_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01string__buffer_3_01N_01_4_01_4" ],
    [ "proto_traits< error_record >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01error__record_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01error__record_01_4" ],
    [ "proto_traits< static_vector< T, N > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01static__vector_3_01T_00_01N_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01static__vector_3_01T_00_01N_01_4_01_4" ],
    [ "proto_traits< std::optional< T > >", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1optional_3_01T_01_4_01_4.html", "structemlabcpp_1_1protocol_1_1proto__traits_3_01std_1_1optional_3_01T_01_4_01_4" ],
    [ "backup_proto_traits< T >", "structemlabcpp_1_1protocol_1_1backup__proto__traits_3_01T_01_4.html", "structemlabcpp_1_1protocol_1_1backup__proto__traits_3_01T_01_4" ],
    [ "tuple", "structemlabcpp_1_1protocol_1_1tuple.html", "structemlabcpp_1_1protocol_1_1tuple" ],
    [ "channel_type", "namespaceemlabcpp_1_1protocol.html#a0db15f01394ce6ad3ae6257e4866dca2", null ],
    [ "converter_for", "namespaceemlabcpp_1_1protocol.html#aba2818d17e2b2cc369733e18839ba19f", null ],
    [ "endpoint_error", "namespaceemlabcpp_1_1protocol.html#a604e8244fbc16988fb4681dbc2d7bc6e", null ],
    [ "mark", "namespaceemlabcpp_1_1protocol.html#a95639c060b8e7d62ecc9dffcfb00236b", null ],
    [ "multiplexer_handler", "namespaceemlabcpp_1_1protocol.html#a986f53c6ddc39b9b91e4bc40d744e569", null ],
    [ "multiplexer_message", "namespaceemlabcpp_1_1protocol.html#aecf6971020e07eaf0c7f0f3b373d5df8", null ],
    [ "multiplexer_payload", "namespaceemlabcpp_1_1protocol.html#a313daa9e6fbd3cb1ebea01a7f36662eb", null ],
    [ "multiplexer_service_msg", "namespaceemlabcpp_1_1protocol.html#ad6900e590c2a7a53cc72a3233bbded88", null ],
    [ "multiplexer_service_protocol", "namespaceemlabcpp_1_1protocol.html#a81042a6c1a100c96f3c81c1a901fdcd7", null ],
    [ "multiplexer_value", "namespaceemlabcpp_1_1protocol.html#a1aaac1eae5d63f6d5247ab537a17b0b7", null ],
    [ "packet_base", "namespaceemlabcpp_1_1protocol.html#a6029ae0351da35ad86920e1e3a9a9d16", null ],
    [ "size_type", "namespaceemlabcpp_1_1protocol.html#a5a83d4c1eb315aa43105c840fd9e2799", null ],
    [ "traits_for", "namespaceemlabcpp_1_1protocol.html#a3a34c38f8477e0d13ec03adfde561549", null ],
    [ "userializer", "namespaceemlabcpp_1_1protocol.html#ab89b3fc5cca94d25cbc305c9ec90084c", null ],
    [ "multiplexer_enum", "namespaceemlabcpp_1_1protocol.html#a95e0cc87ac4f73ef63f5a43c3bc37daf", [
      [ "PORT_MATCH_ERROR", "namespaceemlabcpp_1_1protocol.html#a95e0cc87ac4f73ef63f5a43c3bc37dafad7cee373ed46d900f608c5970cdfe643", null ],
      [ "PROTOCOL_ERROR", "namespaceemlabcpp_1_1protocol.html#a95e0cc87ac4f73ef63f5a43c3bc37dafa89fc9790558c285c0664b57f3251ebc1", null ]
    ] ],
    [ "converter_for_impl", "namespaceemlabcpp_1_1protocol.html#a8a42ec62524b9afc0195ff5f102300f9", null ],
    [ "deserialize", "namespaceemlabcpp_1_1protocol.html#ab6cb8eed0d3dbf831466baeae0b0501d", null ],
    [ "deserialize_range", "namespaceemlabcpp_1_1protocol.html#aa390c4e4ac21589780d1561635052074", null ],
    [ "extract_multiplexed", "namespaceemlabcpp_1_1protocol.html#a120fd9ad89dfd718d5f3b3c3e53d39d3", null ],
    [ "for_each_register", "namespaceemlabcpp_1_1protocol.html#a25417e5baf4dcb0a348bb0e6e5ea83a2", null ],
    [ "message", "namespaceemlabcpp_1_1protocol.html#ad7cf453765253654adcf697d7810d1b6", null ],
    [ "multiplexed_dispatch", "namespaceemlabcpp_1_1protocol.html#a5474a4187292ed9f9d50b1a5a63547c3", null ],
    [ "requires", "namespaceemlabcpp_1_1protocol.html#a380711490896b7090b370d91691adb69", null ],
    [ "sequencer_simple_load", "namespaceemlabcpp_1_1protocol.html#a65c1faf455d3f60687ad28bb43cfe060", null ],
    [ "serialize_at", "namespaceemlabcpp_1_1protocol.html#a5a3eae750f39fcca3a1bf989dc31beac", null ],
    [ "serialize_multiplexed", "namespaceemlabcpp_1_1protocol.html#a3e625c3d79c1b8ca3bc23f0ac23d00cd", null ],
    [ "serialize_range", "namespaceemlabcpp_1_1protocol.html#a025c3ab4f51bf2f567f9ad6dd9440355", null ],
    [ "sizeless_message", "namespaceemlabcpp_1_1protocol.html#a28cabc33555007426b8995bfbf036ae5", null ],
    [ "traits_for_impl", "namespaceemlabcpp_1_1protocol.html#a9c27fc5576f6e7894b809016d7d5cbdc", null ],
    [ "BADVAL_ERR", "namespaceemlabcpp_1_1protocol.html#ae7f63810880ec41008ee91a908c63148", null ],
    [ "base_type", "namespaceemlabcpp_1_1protocol.html#aa86d1c4c148d71e70716484056a293c0", null ],
    [ "BIGSIZE_ERR", "namespaceemlabcpp_1_1protocol.html#a0e98558caf268e368b4544533cb43055", null ],
    [ "BOUNDS_ERR", "namespaceemlabcpp_1_1protocol.html#a925029d9c13ebc476b462499b5fae534", null ],
    [ "CHECKSUM_ERR", "namespaceemlabcpp_1_1protocol.html#a0eb2445c490b6ad98bd006097c7b4296", null ],
    [ "converter_check", "namespaceemlabcpp_1_1protocol.html#af7b9659a2e1fe1042e7ada0c5797599c", null ],
    [ "convertible", "namespaceemlabcpp_1_1protocol.html#aabf37dc4e5c925a68b635522ef9567a5", null ],
    [ "Endianess", "namespaceemlabcpp_1_1protocol.html#a43423655ad145f4437a23bcad9e551d3", null ],
    [ "fixedly_sized", "namespaceemlabcpp_1_1protocol.html#ac625ba8fcce291f5064a3ec8b5177cd5", null ],
    [ "GROUP_ERR", "namespaceemlabcpp_1_1protocol.html#a0d666fa48e88a04569954408cc678126", null ],
    [ "LOWSIZE_ERR", "namespaceemlabcpp_1_1protocol.html#a0cc152a369eaf93310e8db07084d7c1b", null ],
    [ "mark_size", "namespaceemlabcpp_1_1protocol.html#a52a436aee08af672045226b734de0cc5", null ],
    [ "max_size", "namespaceemlabcpp_1_1protocol.html#a9dfeb95ba0e6684fbc02d537318ac8da", null ],
    [ "message_derived", "namespaceemlabcpp_1_1protocol.html#a72532ac9192b8549e819b0cfb65c3faa", null ],
    [ "multiplexer_service_id", "namespaceemlabcpp_1_1protocol.html#ac45b34ffbd63c8c942cea66c9b489c16", null ],
    [ "packet_def", "namespaceemlabcpp_1_1protocol.html#a0fe4054075187b3f230763da6fdd12d1", null ],
    [ "register_map_void_returning", "namespaceemlabcpp_1_1protocol.html#af6a2b6db86c30d95881fe0346b567f8b", null ],
    [ "SIZE_ERR", "namespaceemlabcpp_1_1protocol.html#a75075a1ed102c600dfd1f1894c1fc93b", null ],
    [ "UNDEFVAR_ERR", "namespaceemlabcpp_1_1protocol.html#ac9952af57257a4c508414c5724c85458", null ]
];